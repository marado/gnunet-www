{% extends "common/base.j2" %}
{% block body_content %}
<div class="container">

<dl>
<dt>{{ _("auditor") }}</dt>
  <dd>
    {% trans %}
      trusted third party that verifies that the `exchange` is operating correctly
    {% endtrans %}
  </dd>
<dt>{{ _("bank") }}</dt>
  <dd>
    {% trans %}
      traditional financial service provider who offers wire `transfers` between accounts
    {% endtrans %}
  </dd>
<dt>{{ _("coin") }}</dt>
  <dd>
    {% trans %}
      coins are individual token representing a certain amount of value, also known as the `denomination` of the coin
    {% endtrans %}
  </dd>
<dt>{{ _("contract") }}</dt>
  <dd>
    {% trans %}
      the proposal signed by the wallet.
    {% endtrans %}
  </dd>
<dt>{{ _("denomination") }}</dt>
  <dd>
    {% trans %}
      unit of currency, specifies both the currency and the face value of a `coin`
    {% endtrans %}
  </dd>
<dt>{{ _("denomination key") }}</dt>
  <dd>
    {% trans %}
      RSA key used by the exchange to certify that a given `coin` is valid and of a particular `denomination`
    {% endtrans %}
  </dd>
<dt>{{ _("deposit") }}</dt>
  <dd>
    {% trans %}
      operation by which a merchant passes coins to an exchange, expecting the exchange to credit his `bank` account in the future using a wire `transfer`
    {% endtrans %}
  </dd>
<dt>{{ _("dirty") }}</dt>
  <dd>
    {% trans %}
     a `coin` is dirty if its public key may be known to an entity other than the customer, thereby creating the danger of some entity being able to link multiple transactions of coin's owner if the coin is not refreshed first
    {% endtrans %}
  </dd>
<dt>{{ _("exchange") }}</dt>
  <dd>
    {% trans %}
     Taler's payment service provider.  Issues eletronic `coins` during `withdrawal` and redeems them when they are `deposited` by merchants.
    {% endtrans %}
  </dd>
<dt>{{ _("extension") }}</dt>
  <dd>
    {% trans %}
     implementation of a `wallet` for browsers
    {% endtrans %}
  </dd>
<dt>{{ _("fresh coin") }}</dt>
  <dd>
    {% trans %}
     a `coin` is fresh if its public key is only known to the customer
    {% endtrans %}
  </dd>
<dt>{{ _("master key") }}</dt>
  <dd>
    {% trans %}
     offline key used by the exchange to certify denomination keys and message signing keys
    {% endtrans %}
  </dd>
<dt>{{ _("message signing key") }}</dt>
  <dd>
    {% trans %}
     key used by the exchange to sign online messages, other than coins
    {% endtrans %}
  </dd>
<dt>{{ _("offer") }}</dt>
  <dd>
    {% trans %}
     specification of the details of a transaction, specifies the payment obligations
     for the customer (i.e. the amount), the deliverables of the merchant and other
     related information, such as deadlines or locations; However, it lacks some
     information that the backend is supposed to provide.
     In other words, after the backend adds the missing information to the offer and
     signs it, it becomes a proposal.
    {% endtrans %}
  </dd>
<dt>{{ _("owner") }}</dt>
  <dd>
    {% trans %}
     a `coin` is owned by the entity that knows the private key of the coin
    {% endtrans %}
  </dd>
<dt>{{ _("proof") }}</dt>
  <dd>
    {% trans %}
     message that cryptographically demonstrates that a particular claim is correct
    {% endtrans %}
  </dd>
<dt>{{ _("proposal") }}</dt>
  <dd>
    {% trans %}
     a sketch that has been completed and signed by the merchant backend.
    {% endtrans %}
  </dd>
<dt>{{ _("reserve") }}</dt>
  <dd>
    {% trans %}
     funds set aside for future use; either the balance of a customer at the exchange ready for `withdrawal`, or the funds kept in the exchange's bank account to cover obligations from coins in circulation
    {% endtrans %}
  </dd>
<dt>{{ _("refreshing") }}</dt>
  <dd>
    {% trans %}
     operation by which a `dirty` `coin` is converted into one or more `fresh` coins
    {% endtrans %}
  </dd>
<dt>{{ _("refund") }}</dt>
  <dd>
    {% trans %}
     operation by which a merchant steps back from the right to funds that he obtained from a `deposit` operation, giving the right to the funds back to the customer
    {% endtrans %}
  </dd>
<dt>{{ _("sharing") }}</dt>
  <dd>
    {% trans %}
     users can share ownership of a `coin` by sharing access to the coin's private key, thereby allowing all co-owners to spend the coin at any time.
    {% endtrans %}
  </dd>
<dt>{{ _("signing key") }}</dt>
  <dd>
    {% trans %}
     see message signing key.
    {% endtrans %}
  </dd>
<dt>{{ _("spending") }}</dt>
  <dd>
    {% trans %}
     operation by which a customer gives a merchant the right to `deposit` coins in return for merchandise
    {% endtrans %}
  </dd>
<dt>{{ _("transfer") }}</dt>
  <dd>
    {% trans %}
     method of sending funds between `bank` accounts
    {% endtrans %}
  </dd>
<dt>{{ _("transaction") }}</dt>
  <dd>
    {% trans %}
     method by which ownership is exclusively transferred from one entity to another
    {% endtrans %}
  </dd>
<dt>{{ _("transaction id") }}</dt>
  <dd>
    {% trans %}
     unique number by which a merchant identifies a `transaction`
    {% endtrans %}
  </dd>
<dt>{{ _("wallet") }}</dt>
  <dd>
    {% trans %}
     software running on a customer's computer; withdraws, stores and spends coins
    {% endtrans %}
  </dd>
<dt>{{ _("wire transfer") }}</dt>
  <dd>
    {% trans %}
     see `transfer`
    {% endtrans %}
  </dd>
<dt>{{ _("wire transfer identifier") }}</dt>
  <dd>
    {% trans %}
     subject of a wire `transfer`; usually a random string to uniquely identify the `transfer`
    {% endtrans %}
  </dd>
<dt>{{ _("withdrawal") }}</dt>
  <dd>
    {% trans %}
     operation by which a `wallet` can convert funds from a reserve to fresh coins
    {% endtrans %}
  </dd>
</dt>
</div>
{% endblock body_content %}
