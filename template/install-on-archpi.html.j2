{% extends "common/base.j2" %}
{% block body_content %}
<article class="container">

  <header>
    <h1>{{ _("Tutorial: GNUnet on Arch Linux/Pi") }}</h1>
  </header>


  Welcome to this GNUnet tutorial for Arch Linux. This was also tested for the
  Raspberry Pi 3 image of Arch Linux. If you want to run a GNUnet node on a
  separte system, permanently online, with low energy consumption, this might
  be the thing for you. This tutorial shows you how to install, run, and
  operate it.

  <h2>{{ _("Requirements for Raspberry Pi 3") }}</h2>

  <p>First you need the hardware. This tutorial works with a Raspberry Pi 3 or
  any Arch Linux system. The other Pi versions have not been tested, but they
  should work, too. To install Arch Linux on the Pi3, follow the instructions
  from <a
  href="https://archlinuxarm.org/platforms/armv8/broadcom/raspberry-pi-3">archlinuxarm.org</a>.</p>

  <p>That was easy, right? Our goal now is to build GNUnet from source. So, let's
  install the tools for building new software.</p>

  <p><code>
  $ sudo pacman -S base-devel
  </code></p>

  <p>Now we can continue to install the following Arch Linux dependencies to
  compile GNUnet.</p>

  <p><code>
  $ pacman -Su libmicrohttpd libgcrypt gnurl libunistring gnutls libidn
  libextractor openssl libltdl sqlite texinfo which gettext zlib
  pkg-config git miniupnpc libextractor jansson libsodium libargon2
  </code></p>

  <h2>{{ _("Get the Source Code") }}</h2>

  <p>We are getting closer. Download the GNUnet source code which we will build
  in the next step:<p>

  <p><code>
  $ git clone https://gnunet.org/git/gnunet.git<br>
  </code></p>

  <p>Now it's time to compile and install GNUnet.</p>

  <p><code>
  $ cd gnunet<br>
  $ export GNUNET_PREFIX=/usr/local # for example, other locations possible<br>
  $ ./bootstrap # Run this to generate the configure files.<br>
  $ ./configure --prefix=$GNUNET_PREFIX # Use --help to see the various flags available to you.<br>
  $ make -j$(nproc || echo -n 1)<br>
  $ sudo make install<br>
  </code></p>

  <p>Congrats! GNUnet is now installed!</p>

  <h3>{{ _("In Addition: gnunet-gtk") }}</h3>

  <p>For gnunet-gtk we need a few more dependencies.</p>

  <p><code>
  $ pacman -Su gtk3 glade
  </code></p>
  <p><code>
  $ git clone https://gnunet.org/git/gnunet-gtk.git<br>
  </code></p>
  <code>
    $ cd ../gnunet-gtk<br>
    $ ./bootstrap<br>
    $ export GNUNET_PREFIX=/usr/local # for example, other locations possible<br>
    $ ./configure --prefix=$GNUNET_PREFIX --with-gnunet=$GNUNET_PREFIX<br>
    $ make -j$(nproc || echo -n 1)<br>
    $ sudo make install<br>
  </code>

  <h2>{{ _("Run") }}</h2>

  <p>By default GNUnet looks in our home directory for the file
  ~/.config/gnunet.conf. We can start with an empty file for now:</p>

  <p><code>
  $ touch ~/.config/gnunet.conf
  </code></p>
   <br />
  <p>Now we can start it with the commandline tool gnunet-arm (Automatic Restart
  Manager).</p>

  <p><code>
  $ gnunet-arm -s
  </code></p>

  <p>It starts the default GNUnet services. We can list them with the -I option:</p>

  <p><code>
  $ gnunet-arm -I<br>
  Running services:<br>
  ats (gnunet-service-ats)<br>
  revocation (gnunet-service-revocation)<br>
  set (gnunet-service-set)<br>
  nat (gnunet-service-nat)<br>
  transport (gnunet-service-transport)<br>
  peerstore (gnunet-service-peerstore)<br>
  hostlist (gnunet-daemon-hostlist)<br>
  identity (gnunet-service-identity)<br>
  namecache (gnunet-service-namecache)<br>
  peerinfo (gnunet-service-peerinfo)<br>
  datastore (gnunet-service-datastore)<br>
  zonemaster (gnunet-service-zonemaster)<br>
  zonemaster-monitor (gnunet-service-zonemaster-monitor)<br>
  nse (gnunet-service-nse)<br>
  cadet (gnunet-service-cadet)<br>
  dht (gnunet-service-dht)<br>
  core (gnunet-service-core)<br>
  gns (gnunet-service-gns)<br>
  statistics (gnunet-service-statistics)<br>
  topology (gnunet-daemon-topology)<br>
  fs (gnunet-service-fs)<br>
  namestore (gnunet-service-namestore)<br>
  vpn (gnunet-service-vpn)<br>
  </code></p>

  <p>For stopping GNUnet again we can use the -e option.</p>

  <p><code>
  $ gnunet-arm -e
  </code></p>

  <h2>{{ _("Make sure, it works!") }}</h2>
   <p>
        Please head over here: <a href="https://gnunet.org/en/use.html">Use!</a>
   <p>

</article>
{% endblock body_content %}
